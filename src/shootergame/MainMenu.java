/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shootergame;

import java.awt.CardLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import javax.swing.ImageIcon;

/**
 *
 * @author JUDELVCUNANAN
 */
public class MainMenu extends javax.swing.JFrame {
    
    private ImageIcon iconStartH;
    private ImageIcon iconStart;
    private ImageIcon iconExit;
    private ImageIcon iconExitH;
    private ImageIcon iconExitGame;
    private ImageIcon iconExitGameH;
    private ImageIcon iconMinimize;
    private ImageIcon iconMinimizeH;
    
    
    private int dragXPos, dragYPos;
    GamePanel gamePanel;
    CardLayout cardLayout;
    
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        //load ALL Images BEFORE ANYTHING ELSE
        loadImages();
        dragXPos = dragYPos = -1;
        
        //display Window
        initComponents();
        
        //load mouse listeners
        loadListeners();
        
        //switch between game windows
        cardLayout = (CardLayout) panelWindows.getLayout();
        gamePanel = new GamePanel();
        panelWindows.add(gamePanel, "card_gamePanel");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dragPanel = new javax.swing.JPanel();
        dragBox = new javax.swing.JPanel();
        dragBg = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JLabel();
        btnExit = new javax.swing.JLabel();
        panelWindows = new javax.swing.JPanel();
        PanelStart = new javax.swing.JPanel();
        lblHighScoreDisplay = new javax.swing.JLabel();
        lblHighScore = new javax.swing.JLabel();
        btnStart = new javax.swing.JLabel();
        btnExitGame = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(960, 596));
        setMinimumSize(new java.awt.Dimension(960, 596));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(960, 596));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dragPanel.setBackground(new java.awt.Color(255, 255, 255));
        dragPanel.setMaximumSize(new java.awt.Dimension(960, 36));
        dragPanel.setMinimumSize(new java.awt.Dimension(960, 36));
        dragPanel.setOpaque(false);
        dragPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dragBox.setBackground(new java.awt.Color(255, 255, 255));
        dragBox.setPreferredSize(new java.awt.Dimension(800, 36));

        dragBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/navBarBg.png"))); // NOI18N
        dragBg.setText("jLabel1");

        javax.swing.GroupLayout dragBoxLayout = new javax.swing.GroupLayout(dragBox);
        dragBox.setLayout(dragBoxLayout);
        dragBoxLayout.setHorizontalGroup(
            dragBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dragBg)
        );
        dragBoxLayout.setVerticalGroup(
            dragBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dragBoxLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(dragBg))
        );

        dragPanel.add(dragBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, -1));

        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/navBarMinimize.png"))); // NOI18N
        btnMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dragPanel.add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, -1));

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/navBarExit.png"))); // NOI18N
        btnExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dragPanel.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(882, 0, -1, -1));

        getContentPane().add(dragPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 36));

        panelWindows.setMaximumSize(new java.awt.Dimension(960, 560));
        panelWindows.setLayout(new java.awt.CardLayout());

        PanelStart.setMaximumSize(new java.awt.Dimension(960, 560));
        PanelStart.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                PanelStartComponentShown(evt);
            }
        });
        PanelStart.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHighScoreDisplay.setFont(new java.awt.Font("Tw Cen MT", 0, 24)); // NOI18N
        lblHighScoreDisplay.setForeground(new java.awt.Color(102, 102, 102));
        lblHighScoreDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PanelStart.add(lblHighScoreDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 960, 50));

        lblHighScore.setFont(new java.awt.Font("Tw Cen MT", 0, 48)); // NOI18N
        lblHighScore.setForeground(new java.awt.Color(102, 102, 102));
        lblHighScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PanelStart.add(lblHighScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 260, 960, 50));

        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/startGame.png"))); // NOI18N
        btnStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PanelStart.add(btnStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 230, 40));

        btnExitGame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        btnExitGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PanelStart.add(btnExitGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 80, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BackgroundMain.png"))); // NOI18N
        PanelStart.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 560));

        panelWindows.add(PanelStart, "card2");

        getContentPane().add(panelWindows, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 36, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PanelStartComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelStartComponentShown
        if (gamePanel.newHighScore){
            lblHighScore.setText("NEW HIGH SCORE " + String.valueOf(gamePanel.highScore));
            lblHighScoreDisplay.setVisible(false);
        }
        else {
            lblHighScore.setText("Your score is " + String.valueOf(gamePanel.score) + "!");
            lblHighScoreDisplay.setVisible(true);
            lblHighScoreDisplay.setText("Highest score: " + String.valueOf(gamePanel.highScore));
        }
        
        gamePanel.resetGame();
    }//GEN-LAST:event_PanelStartComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelStart;
    private javax.swing.JLabel background;
    private javax.swing.JLabel btnExit;
    private javax.swing.JLabel btnExitGame;
    private javax.swing.JLabel btnMinimize;
    private javax.swing.JLabel btnStart;
    private javax.swing.JLabel dragBg;
    private javax.swing.JPanel dragBox;
    private javax.swing.JPanel dragPanel;
    private javax.swing.JLabel lblHighScore;
    private javax.swing.JLabel lblHighScoreDisplay;
    private javax.swing.JPanel panelWindows;
    // End of variables declaration//GEN-END:variables

    private void loadImages() {
        iconStartH = loadImage("startGameH");
        iconStart = loadImage("startGame");
        iconExitGame = loadImage("exit");
        iconExitGameH = loadImage("exitH");
        iconExit = loadImage("navBarExit");
        iconExitH = loadImage("navBarExitH");
        iconMinimize = loadImage("navBarMinimize");
        iconMinimizeH = loadImage("navBarMinimizeH");
    }
    private ImageIcon loadImage(String imageName){
        ImageIcon image = new ImageIcon(getClass().getResource("/images/" + imageName + ".png"));
        return image;
    }

    private void loadListeners() {
        btnStart.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                //Show the name panel
                cardLayout.show(panelWindows, "card_gamePanel");
                gamePanel.gameOver = false;
            }
            public void mouseEntered(MouseEvent e) {
                //hover action
                btnStart.setIcon(iconStartH);
            }
            public void mouseExited(MouseEvent e) {
                //hover exit
                btnStart.setIcon(iconStart);
            }
        });
        
        
        btnExit.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                System.exit(0);
            }
            public void mouseEntered(MouseEvent e) {
                //hover action
                btnExit.setIcon(iconExitH);
            }
            public void mouseExited(MouseEvent e) {
                //hover exit
                btnExit.setIcon(iconExit);
            }
        });
        
        btnExitGame.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                System.exit(0);
            }
            public void mouseEntered(MouseEvent e) {
                //hover action
                btnExitGame.setIcon(iconExitGameH);
            }
            public void mouseExited(MouseEvent e) {
                //hover exit
                btnExitGame.setIcon(iconExitGame);
            }
        });
        
        btnMinimize.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                setExtendedState(1);
            }
            public void mouseEntered(MouseEvent e) {
                //hover action
                btnMinimize.setIcon(iconMinimizeH);
            }
            public void mouseExited(MouseEvent e) {
                //hover exit
                btnMinimize.setIcon(iconMinimize);
            }
        });
        
        //---DRAG PANEL---
        dragXPos = -1;
        dragYPos = -1;
        dragPanel.addMouseMotionListener(new MouseMotionAdapter(){
            public void mouseDragged(MouseEvent e) {
                if (dragXPos == -1) {
                    dragXPos = e.getX();
                }
                if (dragYPos == -1) {
                    dragYPos = e.getY();
                }
                setLocation(e.getXOnScreen() - dragXPos, e.getYOnScreen() - dragYPos);
            }});
        
        dragPanel.addMouseListener(new MouseAdapter(){
            //Clears the mouse drag position
            public void mouseReleased(MouseEvent e) {
                dragXPos = -1;
                dragYPos = -1;
            }
        });
    }
}
